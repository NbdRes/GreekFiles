# Required packages
required_packages <- c("stringr", "stringi", "rstudioapi")

# Check and install packages if needed
for (pkg in required_packages) {
  if (!require(pkg, character.only = TRUE, quietly = TRUE)) {
    cat(paste("Installing package:", pkg, "\n"))
    install.packages(pkg)
    library(pkg, character.only = TRUE)
  }
}

# Function to clean text - remove accents from Greek text
clean_text <- function(text) {
  # Normalize to NFD (decompose accented characters)
  normalized <- stringi::stri_trans_general(text, "NFD")
  # Remove combining diacritical marks (U+0300 to U+036F)
  cleaned <- str_replace_all(normalized, "[\\u0300-\\u036f]", "")
  # Keep only Greek letters
  cleaned <- str_replace_all(cleaned, "[^\\p{Greek}\\s]", "")
  # Remove extra whitespace
  cleaned <- str_squish(cleaned)
  return(cleaned)
}

# Open folder dialog for directory selection
input_dir <- rstudioapi::selectDirectory(
  caption = "Select folder containing TXT files to clean"
)

if (length(input_dir) == 0 || is.null(input_dir)) {
  stop("No folder selected. Exiting program.")
}

# Get list of all .txt files in the directory
txt_files <- list.files(path = input_dir, pattern = "\\.txt$", full.names = TRUE)

if (length(txt_files) == 0) {
  stop("No .txt files found in the selected folder. Exiting program.")
}

cat(paste("Found", length(txt_files), "files to process.\n"))

# Process each file
for (input_file in txt_files) {
  cat(paste("\nProcessing:", basename(input_file), "\n"))
  
  # Read the input file with UTF-8 encoding
  text <- readLines(input_file, warn = FALSE, encoding = "UTF-8")
  cat("File has been read successfully.\n")
  
  # Clean the text
  cleaned_text <- sapply(text, clean_text, USE.NAMES = FALSE)
  cat("Text has been cleaned.\n")
  
  # Write the cleaned text back to the original file
  tryCatch({
    writeLines(cleaned_text, input_file, useBytes = FALSE)
    cat(paste("Cleaned text saved to:", basename(input_file), "\n"))
  },
  error = function(e) {
    cat(paste("Error writing to file:", basename(input_file), "-", e$message, "\n"))
  })
}

cat("\n=== Processing complete ===\n")
cat(paste("Total files processed:", length(txt_files), "\n"))
